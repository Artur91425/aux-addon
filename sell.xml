<Ui xsi:schemaLocation="http://www.blizzard.com/wow/ui/">

	<Script file="sell.lua"/>

	<Frame name="AuxSellFrame" parent="AuxFrame" hidden="true">
        <Anchors>
            <Anchor point="TOPLEFT"><Offset><AbsDimension x="0" y="0"/></Offset></Anchor>
            <Anchor point="BOTTOMRIGHT"><Offset><AbsDimension x="0" y="0"/></Offset></Anchor>
        </Anchors>
		<Layers>
			<Layer level="BACKGROUND">
				<FontString name="AuxRecommendStaleText" inherits="GameFontRedLarge">
					<Anchors><Anchor point="TOPLEFT" relativeTo="AuxRecommendText"><Offset><AbsDimension x="430" y="-65"/></Offset></Anchor></Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Frames>
            <Frame name="AuxSellInventory" inherits="AuxFrameBoxTemplate">
                <Size><AbsDimension x="250" y="326"/></Size>
                <Anchors><Anchor point="TOPLEFT"><Offset><AbsDimension x="5" y="-35"/></Offset></Anchor></Anchors>
                <Scripts>
                    <OnLoad>
                        this:SetBackdropBorderColor(0.4, 0.4, 0.4)
                        this:SetBackdropColor(0.15, 0.15, 0.15)
                        getglobal(this:GetName().."Title"):SetText('Inventory')
                    </OnLoad>
                </Scripts>
                <Frames>
                    <Frame name="$parentListing">
                        <Anchors>
                            <Anchor point="TOPLEFT"><Offset><AbsDimension x="0" y="0"/></Offset></Anchor>
                            <Anchor point="BOTTOMRIGHT"><Offset><AbsDimension x="-40" y="0"/></Offset></Anchor>
                        </Anchors>
                        <Scripts>
                            <OnLoad>
                                local config = Aux.sell.inventory_listing_config
                                local sort_order = Aux.util.map(config.sort_order, function(column_order) return { column = config.columns[column_order.column], sort_ascending = column_order.order == 'ascending' } end)
                                this.sheet = Aux.sheet.create(this, config.columns, sort_order, config.row_setter, config.on_cell_click, config.on_cell_enter, config.on_cell_leave)
                            </OnLoad>
                        </Scripts>
                    </Frame>
                </Frames>
            </Frame>
			<frame name="AuxSellParameters" inherits="AuxFrameBoxTemplate">
				<Size><AbsDimension x="210" y="326"/></Size>
                <Anchors><Anchor point="TOPLEFT" relativePoint="TOPRIGHT" relativeTo="AuxSellInventory"><Offset><AbsDimension x="0" y="0"/></Offset></Anchor></Anchors>
                <Scripts>
                    <OnLoad>
                        this:SetBackdropBorderColor(0.4, 0.4, 0.4)
                        this:SetBackdropColor(0.15, 0.15, 0.15)
                        getglobal(this:GetName().."Title"):SetText('Parameters')
                    </OnLoad>
                </Scripts>
				<layers>
					<layer level="BACKGROUND">
                        <FontString name="$parentDurationText" inherits="GameFontHighlightSmall" text="Duration">
                            <Anchors>
                                <Anchor point="TOPLEFT">
                                    <Offset>
                                        <AbsDimension x="10" y="-100"/>
                                    </Offset>
                                </Anchor>
                            </Anchors>
                        </FontString>
					</layer>
				</layers>
				<frames>
                    <Frame name="$parentItem">
                        <Size><AbsDimension x="193" y="37"/></Size>
                        <Anchors><Anchor point="TOPLEFT"><Offset><AbsDimension x="10" y="-10"/></Offset></Anchor></Anchors>
                        <Layers>
                            <Layer level="BORDER">
                                <Texture name="$parentIconTexture">
                                    <Size><AbsDimension x="32" y="32"/></Size>
                                    <Anchors><Anchor point="LEFT"><Offset><AbsDimension x="2" y="0"/></Offset></Anchor></Anchors>
                                </Texture>
                                <Texture file="Interface\Buttons\UI-Quickslot2">
                                    <Size><AbsDimension x="60" y="60"/></Size>
                                    <Anchors><Anchor point="CENTER" relativeTo="$parentIconTexture"><Offset><AbsDimension x="0" y="0"/></Offset></Anchor></Anchors>
                                </Texture>
                                <FontString name="$parentCount" inherits="NumberFontNormal" justifyH="RIGHT">
                                    <Anchors><Anchor point="BOTTOMRIGHT" relativeTo="$parentIconTexture"><Offset><AbsDimension x="-5" y="2"/></Offset></Anchor></Anchors>
                                </FontString>
                                <FontString name="$parentName" inherits="GameFontNormal" justifyH="LEFT">
                                    <Anchors>
                                        <Anchor point="LEFT" relativePoint="RIGHT" relativeTo="$parentIconTexture"><Offset><AbsDimension x="10" y="0"/></Offset></Anchor>
                                        <Anchor point="RIGHT"><Offset><AbsDimension x="-10" y="0"/></Offset></Anchor>
                                        <Anchor point="TOP"><Offset><AbsDimension x="0" y="-5"/></Offset></Anchor>
                                        <Anchor point="BOTTOM"><Offset><AbsDimension x="0" y="5"/></Offset></Anchor>
                                    </Anchors>
                                </FontString>
                            </Layer>
                            <Layer level="BACKGROUND">
                                <Texture name="$parentLeft" file="Interface\AuctionFrame\UI-AuctionItemNameFrame">
                                    <Size><AbsDimension x="10" y="37"/></Size>
                                    <Anchors><Anchor point="LEFT" relativePoint="RIGHT" relativeTo="$parentIconTexture"><Offset><AbsDimension x="2" y="0"/></Offset></Anchor></Anchors>
                                    <TexCoords left="0" right="0.078125" top="0" bottom="1.0"/>
                                </Texture>
                                <Texture name="$parentRight" file="Interface\AuctionFrame\UI-AuctionItemNameFrame">
                                    <Size><AbsDimension x="10" y="37"/></Size>
                                    <Anchors><Anchor point="RIGHT"><Offset><AbsDimension x="0" y="0"/></Offset></Anchor>
                                    </Anchors>
                                    <TexCoords left="0.75" right="0.828125" top="0" bottom="1.0"/>
                                </Texture>
                                <Texture file="Interface\AuctionFrame\UI-AuctionItemNameFrame">
                                    <Size><AbsDimension x="10" y="37"/></Size>
                                    <Anchors>
                                        <Anchor point="LEFT" relativeTo="$parentLeft" relativePoint="RIGHT"><Offset><AbsDimension x="0" y="0"/></Offset></Anchor>
                                        <Anchor point="RIGHT" relativeTo="$parentRight" relativePoint="LEFT"><Offset><AbsDimension x="0" y="0"/></Offset></Anchor>
                                    </Anchors>
                                    <TexCoords left="0.078125" right="0.75" top="0" bottom="1.0"/>
                                </Texture>
                            </Layer>
                        </Layers>
                        <HighlightTexture alphaMode="ADD" file="Interface\Buttons\ButtonHilight-Square"/>
                    </Frame>
                    <Slider name="AuxSellStackSizeSlider" inherits="AuxSliderTemplate">
                        <Anchors><Anchor point="TOPLEFT"><Offset><AbsDimension x="10" y="-50"/></Offset></Anchor></Anchors>
                        <Scripts>
                            <OnValueChanged>
                                Aux.sell.quantity_update()
                            </OnValueChanged>
                        </Scripts>
                    </Slider>
                    <Slider name="AuxSellStackCountSlider" inherits="AuxSliderTemplate">
                        <Anchors><Anchor point="TOPLEFT"><Offset><AbsDimension x="10" y="-80"/></Offset></Anchor></Anchors>
                        <Scripts>
                            <OnValueChanged>
                                Aux.sell.quantity_update()
                            </OnValueChanged>
                        </Scripts>
                    </Slider>
					<EditBox name="AuxSellStackSize" letters="3" numeric="true" autoFocus="false" inherits="InputBoxTemplate">
						<Size><AbsDimension x="30" y="16"/></Size>
						<Anchors><Anchor point="LEFT" relativePoint="RIGHT" relativeTo="AuxSellStackSizeSlider"><Offset><AbsDimension x="10" y="0"/></Offset></Anchor></Anchors>
						<Scripts>
							<OnTextChanged>
                                AuxSellStackSizeSlider:SetValue(this.charge_classes and this.charge_classes[this:GetNumber()] or this:GetNumber())
								Aux.sell.quantity_update()
							</OnTextChanged>
							<OnTabPressed>
		<!-- 						if (IsShiftKeyDown()) then
									getglobal(this:GetParent():GetName().."BuyoutPriceCopper"):SetFocus();
								else
									getglobal(this:GetParent():GetName().."StackCount"):SetFocus();
								end -->
							</OnTabPressed>
							<OnEditFocusLost>
								this:HighlightText(0, 0)
							</OnEditFocusLost>
							<OnEditFocusGained>
								this:HighlightText()
							</OnEditFocusGained>
						</Scripts>
					</EditBox>
					<EditBox name="AuxSellStackCount" numeric="true" autoFocus="false" inherits="InputBoxTemplate">
						<Size><AbsDimension x="30" y="16"/></Size>
						<Anchors><Anchor point="LEFT" relativePoint="RIGHT" relativeTo="AuxSellStackCountSlider"><Offset><AbsDimension x="10" y="0"/></Offset></Anchor></Anchors>
						<Scripts>
							<OnTextChanged>
								if AuxSellStackCountSlider.charge_classes then
									local index = Aux.util.index_of(this:GetNumber(), AuxSellStackCountSlider.charge_classes)
									if index then
										AuxSellStackCountSlider:SetValue(index)
									end
								else
									AuxSellStackCountSlider:SetValue(this:GetNumber())
								end
                                Aux.sell.quantity_update()
							</OnTextChanged>
							<OnTabPressed>
		<!-- 						if (IsShiftKeyDown()) then
									getglobal(this:GetParent():GetName().."StackSize"):SetFocus();
								else
									getglobal(this:GetParent():GetName().."StartPriceGold"):SetFocus();
								end -->
							</OnTabPressed>
							<OnEditFocusLost>
								this:HighlightText(0, 0)
							</OnEditFocusLost>
							<OnEditFocusGained>
								this:HighlightText()
							</OnEditFocusGained>
						</Scripts>
					</EditBox>
                    <CheckButton name="$parentShortDurationRadio" inherits="SendMailRadioButtonTemplate">
                        <Anchors>
                            <Anchor point="TOPLEFT" relativeTo="$parentDurationText" relativePoint="BOTTOMLEFT">
                                <Offset>
                                    <AbsDimension x="3" y="-4"/>
                                </Offset>
                            </Anchor>
                        </Anchors>
                        <Scripts>
                            <OnLoad>getglobal(this:GetName().."Text"):SetText("2h");</OnLoad>
                            <OnClick>Aux.sell.duration_radio_button_on_click(1)</OnClick>
                        </Scripts>
                    </CheckButton>
                    <CheckButton name="$parentMediumDurationRadio" inherits="SendMailRadioButtonTemplate">
                        <Anchors>
                            <Anchor point="LEFT" relativeTo="$parentShortDurationRadio" relativePoint="RIGHT">
                                <Offset>
                                    <AbsDimension x="44" y="0"/>
                                </Offset>
                            </Anchor>
                        </Anchors>
                        <Scripts>
                            <OnLoad>getglobal(this:GetName().."Text"):SetText("8h");</OnLoad>
                            <OnClick>Aux.sell.duration_radio_button_on_click(2)</OnClick>
                        </Scripts>
                    </CheckButton>
                    <CheckButton name="$parentLongDurationRadio" inherits="SendMailRadioButtonTemplate">
                        <Anchors>
                            <Anchor point="LEFT" relativeTo="$parentMediumDurationRadio" relativePoint="RIGHT">
                                <Offset>
                                    <AbsDimension x="44" y="0"/>
                                </Offset>
                            </Anchor>
                        </Anchors>
                        <Scripts>
                            <OnLoad>getglobal(this:GetName().."Text"):SetText("24h");</OnLoad>
                            <OnClick>Aux.sell.duration_radio_button_on_click(3)</OnClick>
                        </Scripts>
                    </CheckButton>
                    <Frame name="$parentStartPrice" inherits="MoneyInputFrameTemplate">
                        <Anchors><Anchor point="TOPLEFT"><Offset><AbsDimension x="12" y="-140"/></Offset></Anchor></Anchors>
                        <layers>
                            <Layer level="ARTWORK">
                                <FontString name="$parentText" inherits="GameFontHighlightSmall" text="STARTING_PRICE">
                                    <Anchors><Anchor point="TOPLEFT"><Offset><AbsDimension x="-3" y="12"/></Offset></Anchor></Anchors>
                                </FontString>
                            </Layer>
                        </layers>
                        <Scripts>
                            <OnLoad>
                                MoneyInputFrame_SetOnvalueChangedFunc(this, Aux.sell.validate_parameters)
                            </OnLoad>
                        </Scripts>
                    </Frame>
                    <Frame name="$parentBuyoutPrice" inherits="MoneyInputFrameTemplate">
                        <Anchors><Anchor point="TOPLEFT"><Offset><AbsDimension x="12" y="-170"/></Offset></Anchor></Anchors>
                        <layers>
                            <Layer level="OVERLAY">
                                <FontString name="$parentText" inherits="GameFontHighlightSmall" text="Buyout Price |cff808080(optional)|r">
                                    <Anchors><Anchor point="TOPLEFT"><Offset><AbsDimension x="-3" y="12"/></Offset></Anchor></Anchors>
                                </FontString>
                                <FontString name="$parentErrorText" inherits="GameFontRedSmall" text="AUCTION_BUYOUT_ERROR">
                                    <Anchors><Anchor point="TOPLEFT"><Offset><AbsDimension x="-3" y="23"/></Offset></Anchor></Anchors>
                                </FontString>
                            </Layer>
                        </layers>
                        <Scripts>
                            <OnLoad>
                                MoneyInputFrame_SetOnvalueChangedFunc(this, Aux.sell.validate_parameters)
                            </OnLoad>
                        </Scripts>
                    </Frame>
				</frames>
			</frame>
            <Frame name="AuxSellAuctions" inherits="AuxFrameBoxTemplate">
                <Size><AbsDimension x="361" y="326"/></Size>
                <Anchors><Anchor point="TOPLEFT" relativePoint="TOPRIGHT" relativeTo="AuxSellParameters"><Offset><AbsDimension x="0" y="0"/></Offset></Anchor></Anchors>
                <Scripts>
                    <OnLoad>
                        this:SetBackdropBorderColor(0.4, 0.4, 0.4)
                        this:SetBackdropColor(0.15, 0.15, 0.15)
                        getglobal(this:GetName().."Title"):SetText('Existing Auctions')
                    </OnLoad>
                </Scripts>
                <Frames>
                <Frame name="$parentListing">
                    <Anchors>
                        <Anchor point="TOPLEFT"><Offset><AbsDimension x="0" y="0"/></Offset></Anchor>
                        <Anchor point="BOTTOMRIGHT"><Offset><AbsDimension x="-40" y="0"/></Offset></Anchor>
                    </Anchors>
                    <Scripts>
                        <OnLoad>
                            local config = Aux.sell.auction_listing_config
                            local sort_order = Aux.util.map(config.sort_order, function(column_order) return { column = config.columns[column_order.column], sort_ascending = column_order.order == 'ascending' } end)
                            this.sheet = Aux.sheet.create(this, config.columns, sort_order, config.row_setter, config.on_cell_click, config.on_cell_enter, config.on_cell_leave)
                        </OnLoad>
                    </Scripts>
                </Frame>
                </Frames>
            </Frame>
            <Button name="AuxSellRefreshButton" inherits="UIPanelButtonTemplate" text="Refresh">
                <Size><AbsDimension x="90" y="26"/></Size>
                <Anchors>
                    <Anchor point="BOTTOMRIGHT">
                        <Offset>
                            <AbsDimension x="-10" y="10"/>
                        </Offset>
                    </Anchor>
                </Anchors>
                <Scripts>
                    <OnClick>
                        AuxSellRefreshButton_OnClick()
                    </OnClick>
                </Scripts>
            </Button>
            <Button name="AuxSellPostButton" inherits="UIPanelButtonTemplate" text="Post Auctions">
                <Size>
                    <AbsDimension x="120" y="26"/>
                </Size>
                <Anchors>
                    <Anchor point="RIGHT" relativePoint="LEFT" relativeTo="AuxSellRefreshButton">
                        <Offset>
                            <AbsDimension x="-10" y="0"/>
                        </Offset>
                    </Anchor>
                </Anchors>
                <Scripts>
                    <OnClick>
                        Aux.sell.post_auctions()
                    </OnClick>
                </Scripts>
            </Button>
		</Frames>
	</Frame>
</Ui>
